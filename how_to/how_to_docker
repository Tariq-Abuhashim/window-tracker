
(1) Deactivate anaconda:
$ conda deactivate

(2) Install Ansible:
$ sudo apt install ansible
$ ansible --version
ansible 2.9.6
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/dv/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.8.10 (default, Nov 22 2023, 10:22:35) [GCC 9.4.0]
  
(3) Install Docker (docker compose):
$ git clone git@gitlab.com:missionsystems/installers.git
$ cd installers
$ ./install.sh --install-role=docker
$ docker compose version
Docker Compose version v2.27.0

(4) Add docker to groups, first check if its already there:
$ groups
$ sudo groupadd docker
$ reboot
$ groups

(5) Run UTS docker image:
$ docker login registry.gitlab.com
$ git clone https://gitlab.com/forv/deployment/docker-deployment.git
$ cd docker-deployment/

# multi-platform pull
$ FORV_REGISTRY=registry.gitlab.com/forv/deployment/docker-deployment docker compose -f FORV2/simulation_services.yaml pull arena_camera_debug

# AMD64 pull
$ docker pull --platform=linux/amd64 registry.gitlab.com/forv/deployment/docker-deployment/camera-ros:humble

# ARM64 pull
$ docker pull --platform=linux/arm64 registry.gitlab.com/forv/deployment/docker-deployment/camera-ros:humble

$ FORV_REGISTRY=registry.gitlab.com/forv/deployment/docker-deployment docker compose -f FORV2/simulation_services.yaml up arena_camera_debug

(6) Work with the docker image in another terminal:
$ docker container ls
$ docker exec -it arena_camera_debug bash
$ source /opt/ros/humble/setup.bash
$ ros2 topic lits



Working with Mission-Systems docker container:

$ docker login
username is: devopsmisssys
password is: lordofthebytes
$ docker pull missionsystems/base:20.04-ros2-cuda-devel

On your laptop run:

$ docker run \
    -it \
    --gpus all \
    -e DISPLAY=$DISPLAY \
    -e NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,display \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    missionsystems/base:20.04-ros2-cuda-devel "bash"

On the Jetson, RUN:

$ docker run \
    -it \
    --runtime nvidia \
    -e DISPLAY=$DISPLAY \
    -e NVIDIA_DRIVER_CAPABILITIES=graphics,compute,utility,display \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    missionsystems/base:20.04-ros2-cuda-devel "bash"

